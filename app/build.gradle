apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.madonasyombua.dictionaryurban"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    // did not add the file to .gitignore for access
    buildTypes.each {
        it.buildConfigField 'String', 'API_KEY', API_KEY
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //ui
    def core_ktx = '1.3.1'
    def appcompat = '1.2.0'
    def constraint_layout = '1.1.3'
    def lifecycle_extensions = '2.2.0'
    def cardview = '1.0.0'
    def recyclerview = '1.1.0'
    def material = '1.2.0'
    def viewmodel= "2.3.0-alpha06"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions"
    implementation "androidx.cardview:cardview:$cardview"
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "com.google.android.material:material:$material"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel"

    //Kotlin coroutines used for threading
    def coroutines = "1.3.8"
    def coroutines_adapter = "0.9.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

    //koin
    def koin = "0.9.1"
    def koin_org = "2.1.5"
    implementation "org.koin:koin-android-architecture:$koin"
    implementation "org.koin:koin-android:$koin"
    implementation "org.koin:koin-core:$koin_org"
    implementation "org.koin:koin-core-ext:$koin_org"
    implementation "org.koin:koin-androidx-scope:$koin_org"
    implementation "org.koin:koin-androidx-viewmodel:$koin_org"

    //retrofit for networking
    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    //crashlytics
    def crashlytics = '2.10.1'
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics"

    //log
    def timber = '4.7.1'
    implementation "com.jakewharton.timber:timber:$timber"

    //testing
    def junit_ext = "1.1.1"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext"
    def mockito = "3.3.3"
    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
    testImplementation "org.mockito:mockito-inline:$mockito"
    def coroutines_test = "1.3.8"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"
    def robolectric = '4.3.1'
    testImplementation "org.robolectric:robolectric:$robolectric"
    def junit = '4.13'
    testImplementation "junit:junit:$junit"
    def testRule="1.2.0"
    androidTestImplementation "androidx.test:rules:$testRule"
    def testRunner='1.2.0'
    androidTestImplementation "androidx.test:runner:$testRunner"
    def espresso = '3.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso"
    def espresso_core = '3.1.0'
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_core", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'org.jetbrains:annotations:16.0.1'
}